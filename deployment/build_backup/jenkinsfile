
pipeline {
        
    agent { node { label 'artifact_backup' } }

    options {

        buildDiscarder(logRotator(numToKeepStr: '5'))
        timestamps()
    }

    parameters {

       string(name: "Branch", defaultValue: "master", description: "")
       string(name: "BuildNumber", defaultValue: "", description: "")
       choice(name: "Repository", choices: ["QTP", "LeanFT", "CDSL-AI"], description: "")
       
    }

    stages {

        stage("Prepare python virtual env") {

           steps {
                bat """
                cd deployment\\build_backup
python.exe -m venv venv
call venv\\Scripts\\activate.bat
python -m pip install --upgrade pip
"""
            } 

        }

        stage("Move build to artifactory") {

            steps {
                dir("deployment\\build_backup") {
                    bat """python backup_build_to_artifactory.py ${params.BuildNumber} ${params.Repository}"""
                }
            }

        }

        // stage("create archive from local copy") {

        //     steps {
        //         echo "Not Implemented!"
        //     }

        // }

        // stage("Copy archive to storage") {

        //     steps {
        //         echo "Not Implemented!"
        //     }

        // }

        // stage("clean up local copy and archive") {

        //     steps {
        //         echo "Not Implemented!"
        //     }

        // }
    }
}